generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          Int      @id @default(autoincrement())
  ownerId     Int
  owner       User     @relation("owner", fields: [ownerId], references: [id])
  name        String
  description String?
  users       User[]
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Task {
  id          Int       @id @default(autoincrement())
  projectId   Int
  project     Project   @relation(fields: [projectId], references: [id])
  reporterId  Int
  reporter    User      @relation("reporter", fields: [reporterId], references: [id])
  asigneeId   Int?
  asignee     User?     @relation("asignee", fields: [asigneeId], references: [id])
  title       String
  description String?
  status      String    @default("todo")
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int
  author    User     @relation(fields: [userId], references: [id])
  text      String
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  password      String
  image         String?
  comments      Comment[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  reportedTasks Task[]    @relation("reporter")
  asignedTasks  Task[]    @relation("asignee")
  ownedProjects Project[] @relation("owner")
  projects      Project[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
